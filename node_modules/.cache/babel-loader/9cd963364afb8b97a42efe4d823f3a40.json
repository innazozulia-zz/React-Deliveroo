{"ast":null,"code":"var _jsxFileName = \"/Users/inna/Documents/Project/front/React/project/my-app/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport qs from \"qs\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sort, { sortList } from \"../Components/Sort\";\nimport Error from \"../Components/Error\";\nimport Categories from \"../Components/Categories\";\nimport FoodBlock from \"../Components/FoodItems/FoodBlock\";\nimport LoadingFoodBlog from \"../Components/FoodItems/LoadingFoodBlock\";\nimport Pagination from \"../pagination/Pagination\";\nimport { AppContext } from \"../App\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCategory, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport { fetchItems } from \"../redux/slices/foodSlice\";\nimport { selectFilter } from \"../redux/slices/foodSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); // const category = useSelector((state) => state.filter.category);\n  // const sort = useSelector((state) => state.filter.sort.sortProperty);\n  // const currentPage = useSelector((state) => state.filter.currentPage);\n  // const { category, sort, currentPage } = useSelector(selectFilter);\n\n  const {\n    items,\n    status\n  } = useSelector(state => state.food);\n  const {\n    searchValue\n  } = React.useContext(AppContext);\n  const isMounted = React.useRef(false); // const [isLoading, setIsLoading] = React.useState(true);\n  // const [items, setItems] = React.useState([]);\n  // const isSearch = React.useRef(false);\n  // const [currentPage, setCurrentPage] = React.useState(1);  переписали с помошью redux\n  // const [category, setCategory] = React.useState(0);  переписали с помошью redux\n  // const [sort, setSort] = React.useState({  переписали с помошью redux\n  //   name: \"popular\",\n  //   sortProperty: \"rating\",\n  // });\n\n  const onClickCategory = id => {\n    dispatch(setCategory(id));\n  };\n\n  const onChangePage = number => {\n    dispatch(setCurrentPage(number));\n  };\n\n  const getItems = async () => {\n    const sortBy = sort;\n    const order = sort;\n    const search = searchValue ? `search=${searchValue}` : \"\";\n    dispatch(fetchItems({\n      sortBy,\n      order,\n      search,\n      category,\n      currentPage\n    }));\n  };\n\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = sortList.find(obj => obj.sortProperty === params.sortProperty);\n\n      if (sort) {\n        params.sort = sort;\n      }\n\n      dispatch(setFilters(params, sort));\n    } // isSearch.current = true;\n\n  }, []);\n  React.useEffect(() => {\n    // window.scrollTo(0, 0);\n    // if (!isSearch.current) {\n    getItems(); // }\n    // isSearch.current = false;\n  }, [category, sort, searchValue, currentPage]);\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort,\n        category,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n\n    isMounted.current = true;\n  }, [category, sort, currentPage]);\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(LoadingFoodBlog, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this));\n  const itemsList = items.map(obj => /*#__PURE__*/_jsxDEV(FoodBlock, {\n    id: obj.id,\n    title: obj.title,\n    price: obj.price,\n    imageUrl: obj.imageUrl,\n    sizes: obj.sizes,\n    types: obj.types,\n    raiting: obj.raiting\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        category: category,\n        onClickCategory: onClickCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"All food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), status === \"error\" ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: status === \"loading\" ? skeletons : itemsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: number => onChangePage(number)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"qfznNFE6Ospo+3k/3ugAKCXdb8M=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","useNavigate","Sort","sortList","Error","Categories","FoodBlock","LoadingFoodBlog","Pagination","AppContext","useSelector","useDispatch","setCategory","setCurrentPage","setFilters","fetchItems","selectFilter","Home","navigate","dispatch","items","status","state","food","searchValue","useContext","isMounted","useRef","onClickCategory","id","onChangePage","number","getItems","sortBy","sort","order","search","category","currentPage","useEffect","window","location","params","parse","substring","find","obj","sortProperty","current","queryString","stringify","skeletons","Array","map","_","index","itemsList","title","price","imageUrl","sizes","types","raiting"],"sources":["/Users/inna/Documents/Project/front/React/project/my-app/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\n\nimport qs from \"qs\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Sort, { sortList } from \"../Components/Sort\";\nimport Error from \"../Components/Error\";\nimport Categories from \"../Components/Categories\";\nimport FoodBlock from \"../Components/FoodItems/FoodBlock\";\nimport LoadingFoodBlog from \"../Components/FoodItems/LoadingFoodBlock\";\nimport Pagination from \"../pagination/Pagination\";\nimport { AppContext } from \"../App\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setCategory,\n  setCurrentPage,\n  setFilters,\n} from \"../redux/slices/filterSlice\";\nimport { fetchItems } from \"../redux/slices/foodSlice\";\nimport { selectFilter } from \"../redux/slices/foodSlice\";\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // const category = useSelector((state) => state.filter.category);\n  // const sort = useSelector((state) => state.filter.sort.sortProperty);\n  // const currentPage = useSelector((state) => state.filter.currentPage);\n\n  // const { category, sort, currentPage } = useSelector(selectFilter);\n  const { items, status } = useSelector((state) => state.food);\n\n  const { searchValue } = React.useContext(AppContext);\n  const isMounted = React.useRef(false);\n  // const [isLoading, setIsLoading] = React.useState(true);\n  // const [items, setItems] = React.useState([]);\n  // const isSearch = React.useRef(false);\n  // const [currentPage, setCurrentPage] = React.useState(1);  переписали с помошью redux\n  // const [category, setCategory] = React.useState(0);  переписали с помошью redux\n  // const [sort, setSort] = React.useState({  переписали с помошью redux\n  //   name: \"popular\",\n  //   sortProperty: \"rating\",\n  // });\n\n  const onClickCategory = (id) => {\n    dispatch(setCategory(id));\n  };\n  const onChangePage = (number) => {\n    dispatch(setCurrentPage(number));\n  };\n\n  const getItems = async () => {\n    const sortBy = sort;\n    const order = sort;\n    const search = searchValue ? `search=${searchValue}` : \"\";\n    dispatch(\n      fetchItems({\n        sortBy,\n        order,\n        search,\n        category,\n        currentPage,\n      })\n    );\n  };\n\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = sortList.find(\n        (obj) => obj.sortProperty === params.sortProperty\n      );\n      if (sort) {\n        params.sort = sort;\n      }\n      dispatch(setFilters(params, sort));\n    }\n    // isSearch.current = true;\n  }, []);\n\n  React.useEffect(() => {\n    // window.scrollTo(0, 0);\n    // if (!isSearch.current) {\n    getItems();\n    // }\n    // isSearch.current = false;\n  }, [category, sort, searchValue, currentPage]);\n\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort,\n        category,\n        currentPage,\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [category, sort, currentPage]);\n\n  const skeletons = [...new Array(6)].map((_, index) => (\n    <LoadingFoodBlog key={index} />\n  ));\n  const itemsList = items.map((obj) => (\n    <FoodBlock\n      key={obj.id}\n      id={obj.id}\n      title={obj.title}\n      price={obj.price}\n      imageUrl={obj.imageUrl}\n      sizes={obj.sizes}\n      types={obj.types}\n      raiting={obj.raiting}\n    />\n  ));\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories category={category} onClickCategory={onClickCategory} />\n        <Sort />\n      </div>\n      <h2 className=\"content__title\">All food</h2>\n      {status === \"error\" ? (\n        <Error />\n      ) : (\n        <div className=\"content__items\">\n          {status === \"loading\" ? skeletons : itemsList}\n        </div>\n      )}\n      <Pagination\n        currentPage={currentPage}\n        onChangePage={(number) => onChangePage(number)}\n      />\n    </div>\n  );\n};\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}